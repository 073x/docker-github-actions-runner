name: GitHub Actions Runner in Docker - Release
on:
  push:
    paths-ignore:
      - README.md
    tags:
      - '*'

jobs:
  ubuntu_latest_tag:
    runs-on: ubuntu-latest
    steps:
    - name: Copy Repo Files
      uses: actions/checkout@master
    - name: get version
      run: echo ::set-env name=TAG::${GITHUB_REF#refs/tags/}
    - name: Get GitHub organization or user
      run: echo ::set-env name=ORG::$(dirname ${GITHUB_REPOSITORY})
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Login
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
    - name: Build
      run: docker buildx build -f Dockerfile -t ${ORG}/github-runner:${TAG} --output "type=image,push=true" --platform linux/amd64,linux/arm/v7,linux/arm64 .
  ubuntu_bionic_tag:
    runs-on: ubuntu-latest
    steps:
    - name: Copy Repo Files
      uses: actions/checkout@master
    - name: get version
      run: echo ::set-env name=TAG::${GITHUB_REF#refs/tags/}
    - name: Get GitHub organization or user
      run: echo ::set-env name=ORG::$(dirname ${GITHUB_REPOSITORY})
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Copy Dockerfile
      run: cp Dockerfile Dockerfile.ubuntu-bionic; sed -i.bak 's/FROM.*/FROM ubuntu:bionic/' Dockerfile.ubuntu-bionic
    - name: Login
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
    - name: Build
      run: docker buildx build -f Dockerfile.ubuntu-bionic -t ${ORG}/github-runner:${TAG}-ubuntu-bionic --output "type=image,push=true" --platform linux/amd64,linux/arm/v7,linux/arm64 .
  ubuntu_xenial_tag:
    runs-on: ubuntu-latest
    steps:
    - name: Copy Repo Files
      uses: actions/checkout@master
    - name: get version
      run: echo ::set-env name=TAG::${GITHUB_REF#refs/tags/}
    - name: Get GitHub organization or user
      run: echo ::set-env name=ORG::$(dirname ${GITHUB_REPOSITORY})
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Copy Dockerfile
      run: cp Dockerfile Dockerfile.ubuntu-xenial; sed -i.bak 's/FROM.*/FROM ubuntu:xenial/' Dockerfile.ubuntu-xenial
    - name: Login
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
    - name: Build
      run: docker buildx build -f Dockerfile.ubuntu-xenial -t ${ORG}/github-runner:${TAG}-ubuntu-xenial --output "type=image,push=true" --platform linux/amd64,linux/arm/v7,linux/arm64 .
