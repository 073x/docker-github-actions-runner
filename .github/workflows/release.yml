name: GitHub Actions Runner in Docker - Release
on:
  push:
    tags:
      - '*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  ubuntu_latest_tag:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: get version
      run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      id: tag
      shell: bash
    - name: Get GitHub organization or user
      run: echo ::set-output name=ORG::$(dirname ${GITHUB_REPOSITORY})
      id: org
      shell: bash
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        install: true
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.org.outputs.ORG }}/github-runner:${{ step.tag.outputs.TAG }}
        platforms: linux/amd64,linux/arm64,linux/386
        file: ./Dockerfile

  ubuntu_bionic_tag:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: get version
      run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      id: tag
      shell: bash
    - name: Get GitHub organization or user
      run: echo ::set-output name=ORG::$(dirname ${GITHUB_REPOSITORY})
      id: org
      shell: bash
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        install: true
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Copy Dockerfile
      run: cp Dockerfile Dockerfile.ubuntu-bionic; sed -i.bak "s/FROM.*/FROM ${{ steps.org.outputs.ORG }}\/github-runner-base:ubuntu-bionic/" Dockerfile.ubuntu-bionic
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.org.outputs.ORG }}/github-runner:${{ step.tag.outputs.TAG }}
        platforms: linux/amd64,linux/arm64,linux/386
        file: ./Dockerfile.ubuntu-bionic

  ubuntu_xenial_tag:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: get version
      run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      id: tag
      shell: bash
    - name: Get GitHub organization or user
      run: echo ::set-output name=ORG::$(dirname ${GITHUB_REPOSITORY})
      id: org
      shell: bash
    - name: Set up Docker
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        install: true
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Copy Dockerfile
      run: cp Dockerfile Dockerfile.ubuntu-xenial; sed -i.bak "s/FROM.*/FROM ${{ steps.org.outputs.ORG }}\/github-runner-base:ubuntu-xenial/" Dockerfile.ubuntu-xenial
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.org.outputs.ORG }}/github-runner:${{ step.tag.outputs.TAG }}
        platforms: linux/amd64,linux/arm64,linux/386
        file: ./Dockerfile.ubuntu-xenial
